# Generated by Django 4.2.5 on 2024-03-01 08:57

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassCaptain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=250)),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=10)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'captain',
                'verbose_name_plural': 'captains',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3'), ('S4', 'S4'), ('S5', 'S5'), ('S6', 'S6')], max_length=100)),
                ('stream', models.CharField(choices=[('S', 'S'), ('H', 'H')], max_length=10)),
                ('state', models.BooleanField(default=False)),
                ('boys', models.IntegerField(default=0)),
                ('girls', models.IntegerField(default=0)),
                ('class_captain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_captain', to='BaseApp.classcaptain')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('Non-elective', 'Non-elective'), ('Elective', 'Elective')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Please provide both names.', max_length=256)),
                ('gender', models.CharField(choices=[('M', 'M'), ('F', 'F')], default='M', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.IntegerField(null=True, unique=True)),
                ('is_class_tr', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('subjects', models.ManyToManyField(blank=True, related_name='teachers', to='BaseApp.subject')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'teacher',
                'verbose_name_plural': 'teachers',
                'unique_together': {('username',)},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=400)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaseApp.classroom')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaseApp.subject')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classroom',
            name='current_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classroom',
            name='teachers',
            field=models.ManyToManyField(related_query_name='teachers_for_class', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClassRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.CharField(max_length=10)),
                ('date', models.DateField(auto_now=True)),
                ('day', models.CharField(max_length=20)),
                ('enter_time', models.TimeField(auto_now=True, verbose_name='enter_time')),
                ('exit_time', models.TimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('class_monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_monitor', to='BaseApp.classcaptain')),
                ('subject_taught', models.ForeignKey(help_text='Subject to be taught', on_delete=django.db.models.deletion.CASCADE, related_query_name='subject_taught', to='BaseApp.subject')),
                ('teacher_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(help_text='Topic to be taught', on_delete=django.db.models.deletion.CASCADE, related_query_name='topic_taught', to='BaseApp.topic')),
            ],
        ),
    ]
